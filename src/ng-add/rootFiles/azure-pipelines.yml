# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: ubuntu-latest

variables:
  appVersion: "initial"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "16.10"
      checkLatest: true
    displayName: Install Node
    continueOnError: false

  - bash: |
      srcVersion=v_$(node -pe "require('./src/assets/app.settings.json').version")
      echo "##vso[task.setvariable variable=appVersion]$srcVersion"
    displayName: Get version from app setting

  - bash: echo "##vso[build.updatebuildnumber]$(appVersion)"
    displayName: Update build number

  - script: |
      npm install -g @angular/cli
      npm install
    displayName: "npm install dependencies"

  #########################################   ENV_PPR      ########################################

  - task: geeklearningio.gl-vsts-tasks-file-patch.json-patch-task.JsonPatch@4
    displayName: "patch To preProd env"
    inputs:
      JsonWorkingDir: src/assets
      JsonTargetFilters: app.settings.json
      JsonPatchContent: '= /environment => "$(WebPreProduction)"'

  - script: |
      ng build --prod
    displayName: "build Prod"

  - task: ArchiveFiles@2
    displayName: "Zip the PreProd build"
    inputs:
      rootFolderOrFile: "./dist/"
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/$(WebPreProduction).zip"
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact to drop"

  #########################################   ENV_PROD      #######################################
  - task: geeklearningio.gl-vsts-tasks-file-patch.json-patch-task.JsonPatch@4
    displayName: "patch To Production env"
    inputs:
      JsonWorkingDir: src/assets
      JsonTargetFilters: app.settings.json
      JsonPatchContent: '= /environment => "$(WebProduction)"'

  - script: |
      ng build --prod
    displayName: "build Prod"

  - task: ArchiveFiles@2
    displayName: "Zip the production build"
    inputs:
      rootFolderOrFile: "./dist/"
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/$(WebProduction).zip"
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact to drop"
